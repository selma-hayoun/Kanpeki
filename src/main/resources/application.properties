# Deploy in Heroku: access enviroment var PORT
# server.port=${PORT:8080}
server.port=8090

#H2

# URL jdbc de conexión a la base de datos
spring.datasource.url=jdbc:h2:./db/kanpekidb
# Usuario y contraseña de la base de datos
spring.datasource.username=kanpeki
spring.datasource.password=k4np3k1
# Le indicamos a JPA/Hibernate que se encargue de generar el DDL
spring.jpa.hibernate.ddl-auto=create-drop
# Habilitamos la consola de H2
spring.h2.console.enabled=true
# Habilitamos el acceso a la consola desde servidor de depliegue
spring.h2.console.settings.web-allow-others=true

#MySQL
# spring.datasource.url=jdbc:mysql://localhost:3306/kanpekidb?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=root

# Para visualizar las sentencias de SQL efectuadas
spring.jpa.show-sql=true

# swagger
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
# oauth2.server.url = https://kanpekiserver.herokuapp.com/oauth/token
# oauth2.server.url = http://cf1.hostemy.com:30008/oauth/token
oauth2.server.url = http://localhost:8080/oauth/token

# Subida de ficheros
upload.root-location=./upload-dir
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# OAuth2
oauth2.client-id=Kokyaku
oauth2.client-secret=34315
info.build.name=kanpeki
# oauth2.redirect-uri=http://localhost:4200/login
# oauth2.redirect-uri=http://localhost:4200/login.html
oauth2.redirect-uri=http://localhost:4200/auth/login
# One day
oauth2.access-token-validity-seconds=86400
# One day and a half
oauth2.refresh-token-validity-seconds=129600